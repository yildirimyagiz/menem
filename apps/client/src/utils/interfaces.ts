// This file was auto-generated by prisma-generator-typescript-interfaces

export type AgentSpecialities = "RESIDENTIAL" | "COMMERCIAL" | "LUXURY" | "RENTAL" | "INVESTMENT" | "OTHER";

export type SharedStatus = "PENDING" | "ACTIVE" | "SUSPENDED";

export type ChannelType = "PUBLIC" | "PRIVATE" | "GROUP";

export type ChannelCategory = "AGENT" | "AGENCY" | "TENANT" | "PROPERTY" | "PAYMENT" | "SYSTEM" | "REPORT" | "RESERVATION" | "TASK" | "TICKET";

export type TicketStatus = "OPEN" | "IN_PROGRESS" | "RESOLVED" | "CLOSED" | "ARCHIVED";

export type ContractStatus = "ACTIVE" | "INACTIVE" | "DRAFT" | "PUBLISHED" | "EXPIRED" | "TERMINATED" | "CANCELLED" | "OVERDUE" | "RENEWED";

export type Gender = "MALE" | "FEMALE";

export type CommissionRuleType = "SEASONAL" | "VOLUME" | "PROPERTY_TYPE" | "LOCATION_BASED" | "BOOKING_VALUE" | "LOYALTY" | "SPECIAL_PROMOTION" | "PACKAGE_DEAL" | "PRICE_COMPARISON" | "COMMISSION_SUMMARY" | "BOOKING_VOLUME" | "REVENUE" | "PERFORMANCE";

export type BookingSource = "Direct" | "Airbnb" | "Booking" | "Expedia" | "Other" | "Agency" | "Provider";

export type ListingType = "SALE" | "RENT" | "BOOKING";

export type EventType = "VIEWING" | "OPEN_HOUSE" | "VIRTUAL_TOUR" | "INSPECTION" | "OTHER";

export type FacilityType = "RESIDENTIAL" | "COMMERCIAL" | "MIXED_USE" | "INDUSTRIAL" | "OFFICE" | "RETAIL" | "WAREHOUSE" | "PARKING" | "GYM" | "SWIMMING_POOL" | "YOGA" | "FITNESS" | "GOLF" | "CAFETERIA" | "RESTAURANT" | "THEATER" | "CONCERT_HALL" | "MUSEUM" | "GALLERY" | "CINEMA" | "ZOO" | "BOTANIC_GARDEN" | "THEME_PARK" | "GOLF_COURSE" | "BEACH" | "PARK";

export type FacilityStatus = "ACTIVE" | "INACTIVE";

export type MortgageStatus = "ACTIVE" | "PAID" | "DEFAULTED" | "CANCELLED";

export type UserStatus = "ACTIVE" | "INACTIVE" | "SUSPENDED";

export type AccountType = "OAUTH" | "EMAIL" | "OIDC" | "CREDENTIALS" | "GOOGLE" | "FACEBOOK";

export type AnalyticsType = "LISTING_VIEW" | "BOOKING_CONVERSION" | "ML_PROPERTY_SCORE" | "USER_ENGAGEMENT" | "REVENUE" | "PERFORMANCE" | "AGENT_PERFORMANCE" | "AGENCY_PERFORMANCE";

export type ArchitecturalStyle = "MODERN" | "CONTEMPORARY" | "TRADITIONAL" | "COLONIAL" | "VICTORIAN" | "CRAFTSMAN" | "MID_CENTURY" | "MEDITERRANEAN" | "FARMHOUSE" | "RANCH" | "SPANISH" | "TUDOR";

export type CommunicationType = "PROBLEM" | "REQUEST" | "ADVICE" | "INFORMATION" | "FEEDBACK";

export type ComplianceType = "DATA_PROTECTION" | "FINANCIAL_REGULATION" | "PROPERTY_LAW" | "TAX_COMPLIANCE" | "LICENSE_VERIFICATION" | "INSURANCE" | "PROFESSIONAL_STANDARDS" | "TITLE_DEED" | "OWNERSHIP_PROOF" | "FIRE_SAFETY_CERTIFICATE" | "ENERGY_EFFICIENCY_CERTIFICATE" | "BUILDING_PERMIT" | "ZONING_PERMIT" | "OCCUPANCY_CERTIFICATE" | "ANTI_MONEY_LAUNDERING" | "BACKGROUND_CHECK" | "RENTAL_REGISTRATION" | "SHORT_TERM_RENTAL_LICENSE" | "AUTHORIZATION_PAPER";

export type ComplianceStatus = "PENDING" | "APPROVED" | "REJECTED";

export type ConstructionType = "WOOD_FRAME" | "BRICK" | "CONCRETE" | "STEEL" | "STONE" | "LOG" | "PREFAB" | "MODULAR";

export type CoolingType = "CENTRAL_AC" | "WINDOW_UNIT" | "DUCTLESS_MINI_SPLIT" | "EVAPORATIVE_COOLER";

export type DeviceType = "MOBILE" | "DESKTOP" | "TABLET" | "OTHER";

export type DiscountType = "FIRST_BOOKING" | "LONG_TERM" | "REFERRAL" | "SEASONAL" | "CUSTOM" | "PERCENTAGE" | "FIXED_AMOUNT" | "FREE_NIGHTS";

export type EnergyEfficiencyRating = "ENERGY_STAR" | "LEED_CERTIFIED" | "LEED_SILVER" | "LEED_GOLD" | "LEED_PLATINUM" | "NET_ZERO";

export type ExpenseStatus = "PENDING" | "PAID" | "OVERDUE" | "CANCELLED";

export type ExpenseType = "MAINTENANCE" | "CLEANING" | "UTILITIES" | "MANAGEMENT_FEE" | "TAX" | "INSURANCE" | "REPAIR" | "SECURITY" | "OTHER";

export type FacilityAmenities = "COMMUNITY_CENTER" | "CO_WORKING_SPACE" | "BIKE_STORAGE" | "PARKING_GARAGE" | "EV_CHARGING" | "SECURITY_DESK" | "PACKAGE_ROOM" | "BBQ_AREA" | "ROOFTOP_TERRACE";

export type GreenCertification = "ENERGY_STAR" | "LEED" | "WELL" | "BREEAM" | "GREEN_GLOBES";

export type HashtagType = "GENERAL" | "PROPERTY" | "AGENT";

export type HeatingType = "FORCED_AIR" | "RADIANT" | "ELECTRIC" | "GAS" | "OIL" | "HEAT_PUMP" | "GEOTHERMAL";

export type IncreaseStatus = "PENDING" | "ACCEPTED" | "REJECTED" | "WITHDRAWN";

export type LocationAmenities = "CITY_CENTER" | "BEACH" | "PARK" | "SHOPPING_MALL" | "HOSPITAL" | "SCHOOL" | "UNIVERSITY" | "POLICE_STATION" | "FIRE_STATION" | "PUBLIC_TRANSPORT" | "SUBWAY_STATION" | "BUS_STOP" | "AIRPORT" | "RESTAURANT_DISTRICT" | "ENTERTAINMENT_ZONE" | "BUSINESS_DISTRICT" | "CULTURAL_CENTER" | "MUSEUM" | "LIBRARY" | "SPORTS_COMPLEX";

export type MentionType = "USER" | "PROPERTY" | "TASK";

export type NotificationType = "MENTION" | "TASK_ASSIGNED" | "BOOKING_CONFIRMED" | "REVIEW_RECEIVED" | "PRICE_CHANGE" | "SYSTEM_UPDATE" | "COMPLIANCE_ALERT" | "COMMUNICATION_RECEIVED" | "RENT_DUE" | "RENT_PAID" | "LEASE_EXPIRING" | "MAINTENANCE_REQUEST" | "LEASE_RENEWAL" | "LATE_PAYMENT_WARNING" | "LEASE_TERMINATION" | "RENT_INCREASE" | "COMMUNITY_NOTICE" | "POLICY_UPDATE" | "LIKE" | "COMMENT" | "FOLLOW" | "AVAILABILITY" | "OTHER";

export type OfferStatus = "PENDING" | "ACCEPTED" | "REJECTED" | "EXPIRED" | "CANCELLED";

export type OfferType = "STANDARD" | "PROMOTIONAL" | "LAST_MINUTE" | "GROUP" | "EXTENDED_STAY";

export type ParkingType = "STREET" | "DRIVEWAY" | "GARAGE" | "CARPORT" | "UNDERGROUND" | "ASSIGNED_PARKING";

export type PaymentStatus = "UNPAID" | "PARTIALLY_PAID" | "PAID" | "REFUNDED" | "OVERDUE" | "CANCELLED" | "PENDING";

export type PhotoType = "COVER" | "GALLERY" | "PROFILE" | "DOCUMENT" | "INTERIOR" | "EXTERIOR" | "AERIAL" | "FLOOR_PLAN";

export type PricingRuleType = "SEASONAL" | "LONG_TERM" | "EARLY_BOOKING" | "LAST_MINUTE" | "SPECIAL_EVENT";

export type PropertyFeatures = "FURNISHED" | "PARTIALLY_FURNISHED" | "UNFURNISHED" | "OPEN_FLOOR_PLAN" | "HIGH_CEILING" | "BALCONY" | "TERRACE" | "GARDEN" | "SEA_VIEW" | "MOUNTAIN_VIEW" | "CITY_VIEW" | "SMART_HOME" | "ENERGY_EFFICIENT" | "SOLAR_PANELS" | "EARTHQUAKE_RESISTANT" | "SOUNDPROOF" | "WHEELCHAIR_ACCESSIBLE" | "PET_FRIENDLY" | "HOME_OFFICE" | "WALK_IN_CLOSET";

export type ReportStatus = "GENERATED" | "IN_PROGRESS" | "COMPLETED" | "FAILED" | "ARCHIVED";

export type ReportType = "FINANCIAL" | "PERFORMANCE" | "COMPLIANCE" | "MARKET_ANALYSIS" | "REVENUE" | "OCCUPANCY" | "GUEST_ANALYSIS" | "OFFER_PERFORMANCE" | "RESERVATION_SUMMARY" | "EXPENSE_TRACKING" | "TASK_MANAGEMENT" | "PROPERTY_PERFORMANCE";

export type ReservationStatus = "PENDING" | "CONFIRMED" | "CANCELLED" | "COMPLETED" | "REFUNDED";

export type ReviewType = "PROPERTY" | "AGENT" | "AGENCY" | "SERVICE";

export type Role = "USER" | "ADMIN" | "SUPER_ADMIN" | "AGENCY" | "AGENCY_ADMIN" | "AGENT_ADMIN" | "AGENT" | "SELLER" | "BUYER" | "GUEST" | "TENANT" | "MODERATOR" | "FACILITY_MANAGER";

export type SubscriptionStatus = "ACTIVE" | "INACTIVE" | "SUSPENDED" | "EXPIRED";

export type SubscriptionTier = "BASIC" | "PRO" | "ENTERPRISE";

export type TaskPriority = "LOW" | "MEDIUM" | "HIGH" | "URGENT";

export type TaskStatus = "TODO" | "IN_PROGRESS" | "COMPLETED" | "CANCELLED";

export type TaskType = "PROPERTY_MAINTENANCE" | "LISTING_REVIEW" | "CLIENT_FOLLOW_UP" | "DOCUMENT_PROCESSING" | "MARKETING_TASK" | "SALES_ACTIVITY" | "COMPLIANCE_CHECK" | "COMMUNICATION_FOLLOW_UP";

export type TaskCategory = "CLEANING" | "REPAIR" | "DECORATION" | "SERVICE" | "MOVING";

export type TaskLabel = "CLEANING" | "DOOR" | "WINDOW" | "ELECTRICITY" | "PLUMPING" | "ROOF" | "GATES" | "FURNITURE" | "WARDROBE";

export type PropertyStatus = "AVAILABLE" | "UNDER_CONTRACT" | "SOLD" | "RENTED" | "PENDING_APPROVAL" | "OFF_MARKET" | "MAINTENANCE" | "FORECLOSURE";

export type PropertyCategory = "RESIDENTIAL" | "COMMERCIAL" | "LAND" | "INDUSTRIAL" | "OTHER";

export type PropertyType = "APARTMENT" | "HOUSE" | "VILLA" | "DUPLEX" | "PENTHOUSE" | "STUDIO" | "CONDO" | "TOWNHOUSE" | "LOFT" | "COTTAGE" | "BUNGALOW" | "CHALET" | "CABIN" | "MANSION" | "RANCH" | "FARM" | "OFFICE" | "SHOP" | "RETAIL" | "WAREHOUSE" | "HOTEL" | "HOSTEL" | "GUESTHOUSE" | "BEDANDBREAKFAST" | "RESORT" | "GARAGE" | "PARKING" | "AGRICULTURAL" | "DEVELOPMENT" | "FACTORY" | "PLANT" | "OTHER";

export type PropertyCondition = "EXCELLENT" | "GOOD" | "FAIR" | "NEEDS_RENOVATION" | "UNDER_CONSTRUCTION";

export type PropertyAmenities = "POOL" | "GYM" | "GARDEN" | "PARKING" | "SECURITY" | "ELEVATOR" | "STORAGE" | "BALCONY" | "TERRACE" | "AIR_CONDITIONING" | "HEATING" | "WIFI" | "SAUNA" | "JACUZZI" | "FIREPLACE" | "BBQ" | "PET_FRIENDLY" | "WHEELCHAIR_ACCESS" | "LAUNDRY" | "DISHWASHER" | "SMART_HOME" | "SOLAR_PANELS" | "CONCIERGE" | "PLAYGROUND" | "TENNIS_COURT" | "BASKETBALL_COURT" | "CINEMA_ROOM" | "GAME_ROOM" | "ROOFTOP" | "SEA_VIEW" | "MOUNTAIN_VIEW" | "CITY_VIEW";

export type BuildingClass = "CLASS_A" | "CLASS_B" | "CLASS_C" | "CLASS_D" | "LUXURY" | "HISTORIC";

export type EnergyRating = "A" | "B" | "C" | "D" | "E" | "F" | "G";

export type OwnershipType = "FREEHOLD" | "LEASEHOLD" | "COMMONHOLD" | "COOPERATIVE" | "TIMESHARE" | "FRACTIONAL";

export type OwnershipCategory = "PERSONAL" | "COMPANY" | "BANK" | "CONSTRUCTION_COMPANY" | "INVESTMENT_FUND" | "GOVERNMENT" | "TRUST";

export type ContactMethod = "EMAIL" | "PHONE" | "MESSAGE" | "ANY";

export type TaxType = "PROPERTY_TAX" | "INCOME_TAX" | "SALES_TAX" | "OCCUPANCY_TAX" | "CITY_TAX" | "STATE_TAX" | "FEDERAL_TAX" | "UTILITY_TAX" | "MAINTENANCE_TAX" | "LUXURY_TAX" | "TRANSFER_TAX" | "STAMP_DUTY" | "OTHER";

export type TaxStatus = "PENDING" | "PAID" | "OVERDUE" | "CANCELLED" | "DISPUTED" | "PARTIALLY_PAID" | "WAIVED" | "EXTENDED";

export type PaymentMethod = "CASH" | "BANK_TRANSFER" | "CREDIT_CARD" | "DEBIT_CARD" | "PAYPAL" | "STRIPE" | "CHECK" | "MONEY_ORDER" | "CRYPTO" | "OTHER";

export type Priority = "LOW" | "MEDIUM" | "HIGH" | "URGENT";

export type RecurringFrequency = "MONTHLY" | "QUARTERLY" | "YEARLY" | "CUSTOM";

export interface Account {
  id: string;
  userId: string;
  type: AccountType;
  provider: string;
  providerAccountId: string;
  refresh_token: string | null;
  access_token: string | null;
  expires_at: number | null;
  token_type: string | null;
  scope: string | null;
  id_token: string | null;
  session_state: string | null;
  isActive: boolean | null;
  user?: User;
  createdAt: Date;
  updatedAt: Date;
}

export interface Agency {
  id: string;
  name: string;
  description: string | null;
  email: string | null;
  phoneNumber: string | null;
  address: string | null;
  website: string | null;
  logoUrl: string | null;
  status: SharedStatus;
  createdAt: Date;
  deletedAt: Date | null;
  updatedAt: Date;
  Agent?: Agent[];
  Analytics?: Analytics[];
  CommunicationLog?: CommunicationLog[];
  ComplianceRecord?: ComplianceRecord[];
  Expense?: Expense[];
  Hashtag?: Hashtag[];
  Language?: Language[];
  location?: Location[];
  Mention?: Mention[];
  Notification?: Notification[];
  Photo?: Photo[];
  Post?: Post[];
  Report?: Report[];
  Reservation?: Reservation[];
  Review?: Review[];
  Subscription?: Subscription[];
  Task?: Task[];
  User?: User[];
  Property?: Property[];
  Facility?: Facility | null;
  facilityId: string | null;
  IncludedService?: IncludedService | null;
  includedServiceId: string | null;
  ExtraCharge?: ExtraCharge | null;
  extraChargeId: string | null;
  isActive: boolean;
  ownerId: string | null;
  Owner?: User | null;
  settings: JsonValue | null;
  theme: string | null;
  externalId: string | null;
  integration: JsonValue | null;
  Guest?: Guest[];
  Contract?: Contract[];
}

export interface Agent {
  id: string;
  name: string;
  email: string | null;
  phoneNumber: string | null;
  bio: string | null;
  locationId: string | null;
  Location?: Location | null;
  language?: Language[];
  address: string | null;
  website: string | null;
  logoUrl: string | null;
  status: SharedStatus;
  createdAt: Date;
  deletedAt: Date | null;
  updatedAt: Date;
  agencyId: string | null;
  Agency?: Agency | null;
  specialities: AgentSpecialities[];
  Analytics?: Analytics[];
  ComplianceRecord?: ComplianceRecord[];
  Notification?: Notification[];
  Photo?: Photo[];
  Post?: Post[];
  Property?: Property[];
  Report?: Report[];
  Reservation?: Reservation[];
  Review?: Review[];
  Subscription?: Subscription[];
  Task?: Task[];
  settings: JsonValue | null;
  externalId: string | null;
  integration: JsonValue | null;
  ownerId: string | null;
  Owner?: User | null;
  lastActive: Date | null;
}

export interface Analytics {
  id: string;
  entityId: string;
  entityType: string;
  type: AnalyticsType;
  data: JsonValue | null;
  timestamp: Date;
  deletedAt: Date | null;
  propertyId: string | null;
  Property?: Property | null;
  userId: string | null;
  User?: User | null;
  agentId: string | null;
  Agent?: Agent | null;
  agencyId: string | null;
  Agency?: Agency | null;
  reservationId: string | null;
  Reservation?: Reservation | null;
  taskId: string | null;
  Task?: Task | null;
}

export interface Availability {
  id: string;
  date: Date;
  isBlocked: boolean;
  isBooked: boolean;
  propertyId: string;
  property?: Property;
  reservationId: string | null;
  reservation?: Reservation | null;
  pricingRuleId: string | null;
  pricingRule?: PricingRule | null;
  totalUnits: number;
  availableUnits: number;
  bookedUnits: number;
  blockedUnits: number;
  specialPricing: JsonValue | null;
  basePrice: number;
  currentPrice: number;
  priceSettings: JsonValue | null;
  minNights: number | null;
  maxNights: number | null;
  maxGuests: number;
  discountSettings: JsonValue | null;
  weekendRate: number | null;
  weekdayRate: number | null;
  weekendMultiplier: number | null;
  weekdayMultiplier: number | null;
  seasonalMultiplier: number | null;
  createdAt: Date;
  updatedAt: Date;
  deletedAt: Date | null;
}

export interface VerificationToken {
  id: string;
  userId: string;
  token: string;
  createdAt: Date;
  updatedAt: Date;
}

export interface Channel {
  id: string;
  cuid: string;
  name: string;
  type: ChannelType;
  category: ChannelCategory;
  description: string | null;
  createdAt: Date;
  updatedAt: Date;
  deletedAt: Date | null;
  CommunicationLogs?: CommunicationLog[];
}

export interface Ticket {
  id: string;
  cuid: string;
  subject: string;
  description: string | null;
  status: TicketStatus;
  createdAt: Date;
  updatedAt: Date;
  closedAt: Date | null;
  deletedAt: Date | null;
  CommunicationLogs?: CommunicationLog[];
  userId: string;
  agentId: string | null;
  User?: User;
  Agent?: User | null;
}

export interface Contract {
  id: string;
  name: string;
  description: string;
  status: ContractStatus;
  startDate: Date;
  endDate: Date;
  tenantId: string;
  propertyId: string;
  agencyId: string;
  terms: JsonValue | null;
  metadata: JsonValue | null;
  createdAt: Date;
  updatedAt: Date;
  deletedAt: Date | null;
  Agency?: Agency | null;
  Tenant?: Tenant | null;
  Property?: Property | null;
  increase?: Increase[];
}

export interface CommunicationLog {
  id: string;
  senderId: string;
  receiverId: string;
  type: CommunicationType;
  content: string;
  entityId: string | null;
  entityType: string | null;
  metadata: JsonValue | null;
  isRead: boolean;
  readAt: Date | null;
  deliveredAt: Date | null;
  deletedAt: Date | null;
  timestamp: Date;
  userId: string | null;
  agencyId: string | null;
  threadId: string | null;
  replyToId: string | null;
  Agency?: Agency | null;
  User?: User | null;
  replyTo?: CommunicationLog | null;
  replies?: CommunicationLog[];
  Channel?: Channel | null;
  channelId: string | null;
  Ticket?: Ticket | null;
  ticketId: string | null;
  createdAt: Date;
  updatedAt: Date;
  isEdited: boolean;
  editedAt: Date | null;
  deletedById: string | null;
  reactions: JsonValue | null;
  attachments: JsonValue | null;
  readBy: JsonValue | null;
}

export interface ComplianceRecord {
  id: string;
  entityId: string;
  entityType: string;
  type: ComplianceType;
  status: ComplianceStatus;
  documentUrl: string | null;
  expiryDate: Date | null;
  notes: string | null;
  isVerified: boolean;
  propertyId: string | null;
  agentId: string | null;
  agencyId: string | null;
  reservationId: string | null;
  createdAt: Date;
  updatedAt: Date;
  deletedAt: Date | null;
  Agency?: Agency | null;
  Agent?: Agent | null;
  Property?: Property | null;
  Reservation?: Reservation | null;
}

export interface Currency {
  id: string;
  code: string;
  name: string;
  symbol: string;
  exchangeRate: number;
  isActive: boolean;
  createdAt: Date;
  updatedAt: Date;
  Expense?: Expense[];
  Payment?: Payment[];
  Reservation?: Reservation[];
  Property?: Property[];
  PricingRule?: PricingRule[];
  users?: User[];
}

export interface Guest {
  id: string;
  name: string;
  phone: string;
  image: string | null;
  nationality: string;
  passportNumber: string;
  gender: Gender;
  birthDate: Date;
  address: string;
  city: string;
  country: string;
  zipCode: string;
  email: string;
  agencyId: string | null;
  Agency?: Agency | null;
  createdAt: Date;
  updatedAt: Date;
  deletedAt: Date | null;
  Property?: Property[];
  Reservation?: Reservation[];
}

export interface CommissionRule {
  id: string;
  providerId: string;
  provider?: Provider;
  ruleType: CommissionRuleType;
  startDate: Date | null;
  endDate: Date | null;
  commission: number;
  minVolume: number | null;
  maxVolume: number | null;
  conditions: JsonValue | null;
  createdAt: Date;
  updatedAt: Date;
  deletedAt: Date | null;
  Payment?: Payment[];
}

export interface Discount {
  deletedAt: Date | null;
  id: string;
  name: string;
  description: string | null;
  code: string | null;
  value: number;
  type: DiscountType;
  startDate: Date | null;
  endDate: Date | null;
  maxUsage: number | null;
  currentUsage: number;
  isActive: boolean;
  createdAt: Date;
  updatedAt: Date;
  propertyId: string;
  Property?: Property;
  Reservation?: Reservation[];
  pricingRuleId: string | null;
  PricingRule?: PricingRule | null;
}

export interface PricingRule {
  deletedAt: Date | null;
  id: string;
  name: string;
  description: string | null;
  basePrice: number;
  strategy: string;
  startDate: Date | null;
  endDate: Date | null;
  minNights: number | null;
  maxNights: number | null;
  weekdayPrices: JsonValue | null;
  taxRules: JsonValue | null;
  discountRules: JsonValue | null;
  isActive: boolean;
  createdAt: Date;
  updatedAt: Date;
  propertyId: string;
  Property?: Property;
  Reservation?: Reservation[];
  Availability?: Availability[];
  Subscriptions?: Subscription[];
  Discounts?: Discount[];
  currencyId: string;
  currency?: Currency | null;
}

export interface Expense {
  id: string;
  propertyId: string | null;
  tenantId: string | null;
  agencyId: string | null;
  type: ExpenseType;
  amount: number;
  currencyId: string;
  dueDate: Date | null;
  paidDate: Date | null;
  status: ExpenseStatus;
  notes: string | null;
  createdAt: Date;
  updatedAt: Date;
  deletedAt: Date | null;
  Agency?: Agency | null;
  Currency?: Currency;
  Property?: Property | null;
  Tenant?: Tenant | null;
  Facility?: Facility | null;
  facilityId: string | null;
  IncludedService?: IncludedService | null;
  includedServiceId: string | null;
  ExtraCharge?: ExtraCharge | null;
  extraChargeId: string | null;
  Payment?: Payment[];
}

export interface Hashtag {
  deletedAt: Date | null;
  id: string;
  name: string;
  type: HashtagType;
  description: string | null;
  usageCount: number;
  relatedTags: string[];
  createdById: string | null;
  agencyId: string | null;
  createdAt: Date;
  updatedAt: Date;
  Agency?: Agency | null;
  User?: User | null;
  Post?: Post[];
  Property?: Property[];
}

export interface Increase {
  id: string;
  propertyId: string;
  tenantId: string;
  proposedBy: string;
  oldRent: number;
  newRent: number;
  effectiveDate: Date;
  status: IncreaseStatus;
  createdAt: Date;
  updatedAt: Date;
  deletedAt: Date | null;
  Property?: Property;
  Tenant?: Tenant;
  Offer?: Offer | null;
  Contract?: Contract | null;
  contractId: string | null;
}

export interface Language {
  id: string;
  code: string;
  name: string;
  nativeName: string;
  isRTL: boolean;
  isActive: boolean;
  createdAt: Date;
  updatedAt: Date;
  deletedAt: Date | null;
  agencyId: string | null;
  Agency?: Agency | null;
  Agent?: Agent | null;
  agentId: string | null;
  User?: User | null;
  userId: string | null;
}

export interface Mention {
  id: string;
  mentionedById: string;
  mentionedToId: string;
  type: MentionType;
  taskId: string | null;
  propertyId: string | null;
  content: string | null;
  isRead: boolean;
  agencyId: string | null;
  createdAt: Date;
  updatedAt: Date;
  deletedAt: Date | null;
  userId: string | null;
  Agency?: Agency | null;
  mentionedBy?: User;
  mentionedTo?: User;
  Property?: Property | null;
  Task?: Task | null;
  user?: User | null;
}

export interface Notification {
  id: string;
  userId: string;
  type: NotificationType;
  content: string;
  entityId: string | null;
  entityType: string | null;
  isRead: boolean;
  tenantId: string | null;
  agencyId: string | null;
  createdAt: Date;
  updatedAt: Date;
  deletedAt: Date | null;
  reviewId: string | null;
  agentId: string | null;
  Agency?: Agency | null;
  Agent?: Agent | null;
  Review?: Review | null;
  Tenant?: Tenant | null;
  User?: User;
}

export interface Offer {
  increaseId: string | null;
  id: string;
  offerType: OfferType;
  status: OfferStatus;
  basePrice: number;
  discountRate: number | null;
  finalPrice: number;
  guestId: string | null;
  startDate: Date;
  endDate: Date;
  specialRequirements: string | null;
  notes: string | null;
  createdAt: Date;
  updatedAt: Date;
  deletedAt: Date | null;
  reservationId: string | null;
  propertyId: string;
  User?: User | null;
  Increase?: Increase | null;
  Reservation?: Reservation | null;
  Property?: Property | null;
}

export interface Payment {
  id: string;
  tenantId: string;
  amount: number;
  currencyId: string;
  paymentDate: Date;
  dueDate: Date;
  status: PaymentStatus;
  paymentMethod: string | null;
  reference: string | null;
  notes: string | null;
  createdAt: Date;
  updatedAt: Date;
  deletedAt: Date | null;
  stripePaymentIntentId: string | null;
  stripePaymentMethodId: string | null;
  stripeClientSecret: string | null;
  stripeStatus: string | null;
  stripeError: string | null;
  propertyId: string | null;
  expenseId: string | null;
  reservationId: string | null;
  subscriptionId: string | null;
  commissionRuleId: string | null;
  includedServiceId: string | null;
  extraChargeId: string | null;
  Currency?: Currency;
  Tenant?: Tenant;
  Property?: Property | null;
  Expense?: Expense | null;
  Reservation?: Reservation | null;
  Subscription?: Subscription | null;
  CommissionRule?: CommissionRule | null;
  IncludedService?: IncludedService | null;
  ExtraCharge?: ExtraCharge | null;
}

export interface Permission {
  id: string;
  name: string;
  description: string | null;
  User?: User[];
}

export interface Photo {
  id: string;
  url: string;
  originalName: string | null;
  filename: string | null;
  type: PhotoType;
  caption: string | null;
  alt: string | null;
  src: string | null;
  featured: boolean;
  width: number | null;
  height: number | null;
  fileSize: number | null;
  mimeType: string | null;
  dominantColor: string | null;
  mlMetadata: JsonValue | null;
  createdAt: Date;
  updatedAt: Date;
  deletedAt: Date | null;
  userId: string | null;
  agencyId: string | null;
  propertyId: string | null;
  agentId: string | null;
  postId: string | null;
  Agency?: Agency | null;
  Agent?: Agent | null;
  Post?: Post | null;
  Property?: Property | null;
  User?: User | null;
}

export interface Post {
  deletedAt: Date | null;
  id: string;
  title: string;
  content: string;
  slug: string;
  createdAt: Date;
  updatedAt: Date;
  userId: string;
  agencyId: string | null;
  hashtagId: string | null;
  agentId: string | null;
  Photo?: Photo[];
  Agency?: Agency | null;
  Agent?: Agent | null;
  Hashtag?: Hashtag | null;
  User?: User;
}

export interface Provider {
  id: string;
  name: string;
  logo: string | null;
  apiKey: string | null;
  apiSecret: string | null;
  baseUrl: string | null;
  isActive: boolean;
  commission: number;
  createdAt: Date;
  updatedAt: Date;
  deletedAt: Date | null;
  report?: Report[];
  reservations?: Reservation[];
  commissionRule?: CommissionRule[];
  source: BookingSource;
}

export interface Property {
  id: string;
  propertyNumber: string;
  title: string;
  description: string;
  propertyType: PropertyType;
  propertyStatus: PropertyStatus;
  category: PropertyCategory;
  locationId: string | null;
  Location?: Location | null;
  size: number;
  bedrooms: number | null;
  bathrooms: number | null;
  floors: number | null;
  yearBuilt: number | null;
  condition: PropertyCondition;
  features: PropertyFeatures[];
  amenities: PropertyAmenities[];
  locationAmenities: LocationAmenities[];
  constructionType: ConstructionType | null;
  buildingClass: BuildingClass | null;
  energyRating: EnergyRating | null;
  parkingSpaces: number;
  parkingType: ParkingType | null;
  heatingType: HeatingType | null;
  greenCertification: GreenCertification | null;
  cancellationPolicy: string | null;
  checkInTime: Date | null;
  checkOutTime: Date | null;
  specialNotes: string | null;
  rules: string | null;
  nearbyAttractions: string | null;
  transportOptions: string | null;
  favoriteCount: number;
  listingType: ListingType;
  ownershipType: OwnershipType | null;
  ownershipCategory: OwnershipCategory | null;
  titleDeedNumber: string | null;
  titleDeedDate: Date | null;
  marketValue: number | null;
  taxValue: number | null;
  insuranceValue: number | null;
  mortgageEligible: boolean;
  agentId: string | null;
  ownerId: string | null;
  sellerId: string | null;
  buyerId: string | null;
  agencyId: string | null;
  eventId: string | null;
  events?: Event[];
  contactMethod: ContactMethod;
  contactEmail: string | null;
  contactPhone: string | null;
  isActive: boolean;
  mlScore: number | null;
  featured: boolean;
  createdAt: Date;
  updatedAt: Date;
  deletedAt: Date | null;
  Analytics?: Analytics[];
  ComplianceRecord?: ComplianceRecord[];
  Expense?: Expense[];
  Increase?: Increase[];
  Mention?: Mention[];
  Photo?: Photo[];
  Agent?: Agent | null;
  Owner?: User | null;
  Seller?: User | null;
  Buyer?: User | null;
  Agency?: Agency | null;
  Review?: Review[];
  Task?: Task[];
  Hashtag?: Hashtag[];
  PricingRules?: PricingRule[];
  Facility?: Facility | null;
  facilityId: string | null;
  IncludedService?: IncludedService | null;
  includedServiceId: string | null;
  ExtraCharge?: ExtraCharge | null;
  extraChargeId: string | null;
  Availability?: Availability[];
  TaxRecord?: TaxRecord[];
  Mortgage?: Mortgage[];
  Favorite?: Favorite[];
  Currency?: Currency | null;
  currencyId: string | null;
  Discount?: Discount[];
  Offer?: Offer[];
  Reservation?: Reservation[];
  Tenant?: Tenant[];
  Guest?: Guest | null;
  guestId: string | null;
  Contract?: Contract[];
  Report?: Report[];
  Payment?: Payment[];
}

export interface Event {
  id: string;
  propertyId: string;
  Property?: Property;
  title: string;
  description: string | null;
  eventType: EventType;
  scheduledAt: Date;
  duration: number | null;
  createdById: string | null;
  createdBy?: User | null;
  attendees?: User[];
  createdAt: Date;
  updatedAt: Date;
  deletedAt: Date | null;
  isActive: boolean;
}

export interface Facility {
  id: string;
  name: string;
  description: string | null;
  icon: string | null;
  logo: string | null;
  locationId: string | null;
  Location?: Location | null;
  type: FacilityType;
  status: FacilityStatus;
  createdAt: Date;
  updatedAt: Date;
  deletedAt: Date | null;
  properties?: Property[];
  agencies?: Agency[];
  users?: User[];
  tasks?: Task[];
  reports?: Report[];
  facilityAmenities: FacilityAmenities[];
  locationAmenities: LocationAmenities[];
  expenses?: Expense[];
  includedServices?: IncludedService[];
  extraCharges?: ExtraCharge[];
}

export interface IncludedService {
  id: string;
  name: string;
  description: string | null;
  icon: string | null;
  logo: string | null;
  createdAt: Date;
  updatedAt: Date;
  deletedAt: Date | null;
  properties?: Property[];
  agencies?: Agency[];
  users?: User[];
  tasks?: Task[];
  reports?: Report[];
  facilityAmenities: FacilityAmenities[];
  locationAmenities: LocationAmenities[];
  expenses?: Expense[];
  extraCharges?: ExtraCharge[];
  Facility?: Facility | null;
  facilityId: string | null;
  Payment?: Payment[];
}

export interface ExtraCharge {
  id: string;
  name: string;
  description: string | null;
  icon: string | null;
  logo: string | null;
  createdAt: Date;
  updatedAt: Date;
  deletedAt: Date | null;
  properties?: Property[];
  agencies?: Agency[];
  users?: User[];
  tasks?: Task[];
  reports?: Report[];
  facilityAmenities: FacilityAmenities[];
  locationAmenities: LocationAmenities[];
  expenses?: Expense[];
  Facility?: Facility | null;
  facilityId: string | null;
  IncludedService?: IncludedService | null;
  includedServiceId: string | null;
  Payment?: Payment[];
}

export interface Report {
  deletedAt: Date | null;
  id: string;
  title: string;
  reportType: ReportType;
  generatedById: string;
  startDate: Date;
  endDate: Date;
  entityId: string | null;
  entityType: string | null;
  totalRevenue: number | null;
  totalBookings: number | null;
  averagePrice: number | null;
  occupancyRate: number | null;
  fileUrl: string | null;
  description: string | null;
  data: JsonValue | null;
  status: ReportStatus;
  createdAt: Date;
  updatedAt: Date;
  generatedBy?: User | null;
  agencyId: string | null;
  reservationIds: string[];
  totalReservations: number | null;
  cancelledReservations: number | null;
  completedReservations: number | null;
  averageReservationLength: number | null;
  totalPaidReservations: number | null;
  totalUnpaidReservations: number | null;
  Agency?: Agency | null;
  Reservation?: Reservation[];
  Facility?: Facility | null;
  facilityId: string | null;
  IncludedService?: IncludedService | null;
  includedServiceId: string | null;
  ExtraCharge?: ExtraCharge | null;
  extraChargeId: string | null;
  Provider?: Provider | null;
  providerId: string | null;
  propertyId: string | null;
  Property?: Property | null;
  Tenant?: Tenant | null;
  tenantId: string | null;
  Agent?: Agent | null;
  agentId: string | null;
}

export interface Location {
  id: string;
  country: string;
  city: string;
  district: string | null;
  address: string;
  postalCode: string | null;
  coordinates: JsonValue | null;
  properties?: Property[];
  createdAt: Date;
  updatedAt: Date;
  deletedAt: Date | null;
  User?: User[];
  Facility?: Facility[];
  Agent?: Agent[];
  Agency?: Agency | null;
  agencyId: string | null;
}

export interface Reservation {
  deletedAt: Date | null;
  id: string;
  propertyId: string;
  userId: string;
  agentId: string | null;
  startDate: Date;
  endDate: Date;
  guests: number;
  status: ReservationStatus;
  totalPrice: number;
  currencyId: string;
  paymentStatus: PaymentStatus;
  specialRequests: string | null;
  checkInTime: Date | null;
  checkOutTime: Date | null;
  createdAt: Date;
  updatedAt: Date;
  pricingRuleId: string | null;
  discountId: string | null;
  agencyId: string | null;
  reportId: string | null;
  Analytics?: Analytics[];
  guestId: string;
  Guest?: Guest;
  ComplianceRecord?: ComplianceRecord[];
  Offer?: Offer | null;
  Agency?: Agency | null;
  Agent?: Agent | null;
  Currency?: Currency;
  Discount?: Discount | null;
  PricingRule?: PricingRule | null;
  Report?: Report | null;
  User?: User;
  Property?: Property;
  Availability?: Availability[];
  providerId: string | null;
  Provider?: Provider | null;
  Payment?: Payment[];
}

export interface TaxRecord {
  id: string;
  propertyId: string;
  year: number;
  amount: number;
  percentage: number | null;
  taxType: TaxType;
  paid: boolean;
  paidAmount: number;
  dueDate: Date;
  paidDate: Date | null;
  notes: string | null;
  status: TaxStatus;
  paymentMethod: PaymentMethod | null;
  transactionId: string | null;
  receiptNumber: string | null;
  invoiceNumber: string | null;
  clientId: string;
  createdById: string;
  updatedById: string;
  createdAt: Date;
  updatedAt: Date;
  deletedAt: Date | null;
  lateFees: number;
  interestRate: number;
  gracePeriod: number;
  isRecurring: boolean;
  recurringFrequency: RecurringFrequency | null;
  nextDueDate: Date | null;
  reminderSent: boolean;
  reminderDate: Date | null;
  parentTaxRecordId: string | null;
  relatedTaxRecords: string[];
  tags: string[];
  priority: Priority;
  category: string | null;
  subcategory: string | null;
  Property?: Property;
  Client?: User;
  CreatedBy?: User;
  UpdatedBy?: User;
  ParentTaxRecord?: TaxRecord | null;
  ChildTaxRecords?: TaxRecord[];
}

export interface Mortgage {
  id: string;
  propertyId: string;
  lender: string;
  principal: number;
  interestRate: number;
  startDate: Date;
  endDate: Date | null;
  status: MortgageStatus;
  notes: string | null;
  Property?: Property;
  createdAt: Date;
  updatedAt: Date;
  deletedAt: Date | null;
}

export interface Review {
  id: string;
  userId: string;
  agentId: string | null;
  agencyId: string | null;
  propertyId: string | null;
  title: string;
  content: string;
  rating: number;
  parentReviewId: string | null;
  isEdited: boolean;
  helpfulCount: number;
  notHelpfulCount: number;
  createdAt: Date;
  updatedAt: Date;
  deletedAt: Date | null;
  Notification?: Notification[];
  Agency?: Agency | null;
  Agent?: Agent | null;
  User?: User;
  Property?: Property | null;
}

export interface Session {
  id: string;
  sessionToken: string;
  userId: string;
  expires: Date;
  user?: User;
}

export interface Subscription {
  deletedAt: Date | null;
  id: string;
  entityId: string;
  entityType: string;
  tier: SubscriptionTier;
  status: SubscriptionStatus;
  startDate: Date;
  endDate: Date;
  features: string[];
  paymentHistoryId: string | null;
  isAutoRenew: boolean;
  createdAt: Date;
  updatedAt: Date;
  agencyId: string | null;
  agentId: string | null;
  Agency?: Agency | null;
  Agent?: Agent | null;
  User?: User | null;
  userId: string | null;
  paymentMethod: string | null;
  paymentStatus: PaymentStatus;
  pricingRuleId: string | null;
  PricingRule?: PricingRule | null;
  Payment?: Payment[];
}

export interface Task {
  id: string;
  title: string;
  description: string | null;
  status: TaskStatus;
  type: TaskType;
  priority: TaskPriority;
  category: TaskCategory | null;
  labels: TaskLabel[];
  createdById: string | null;
  assignedToId: string | null;
  propertyId: string | null;
  agentId: string | null;
  agencyId: string | null;
  dueDate: Date | null;
  completedAt: Date | null;
  createdAt: Date;
  updatedAt: Date;
  deletedAt: Date | null;
  facilityId: string | null;
  includedServiceId: string | null;
  extraChargeId: string | null;
  followers: JsonValue | null;
  Analytics?: Analytics[];
  Mention?: Mention[];
  Agency?: Agency | null;
  Agent?: Agent | null;
  Property?: Property | null;
  createdBy?: User | null;
  assignedTo?: User | null;
  Facility?: Facility | null;
  IncludedService?: IncludedService | null;
  ExtraCharge?: ExtraCharge | null;
}

export interface Tenant {
  id: string;
  userId: string;
  firstName: string;
  lastName: string;
  email: string;
  phoneNumber: string | null;
  leaseStartDate: Date;
  leaseEndDate: Date;
  paymentStatus: PaymentStatus;
  createdAt: Date;
  updatedAt: Date;
  deletedAt: Date | null;
  propertyId: string;
  Expense?: Expense[];
  Increase?: Increase[];
  Notification?: Notification[];
  Payment?: Payment[];
  Property?: Property;
  User?: User;
  Contract?: Contract[];
  Report?: Report[];
}

export interface User {
  id: string;
  email: string;
  username: string | null;
  displayName: string | null;
  name: string | null;
  firstName: string | null;
  lastName: string | null;
  phoneNumber: string | null;
  profilePicture: string | null;
  image: string | null;
  language?: Language[];
  role: Role;
  type: AccountType;
  isActive: boolean;
  lastLogin: Date | null;
  emailVerified: Date | null;
  responseTime: string | null;
  createdAt: Date;
  updatedAt: Date;
  deletedAt: Date | null;
  locale: string | null;
  timezone: string | null;
  preferences: JsonValue | null;
  agencyId: string | null;
  status: UserStatus;
  lastSeen: Date | null;
  isOnline: boolean | null;
  currencyId: string | null;
  Currency?: Currency | null;
  ticketsCreated?: Ticket[];
  ticketsAssigned?: Ticket[];
  Account?: Account[];
  Analytics?: Analytics[];
  CommunicationLog?: CommunicationLog[];
  Hashtag?: Hashtag[];
  MentionsByUser?: Mention[];
  MentionsToUser?: Mention[];
  MentionsGenericUser?: Mention[];
  createdEvents?: Event[];
  attendingEvents?: Event[];
  Subscription?: Subscription[];
  Notification?: Notification[];
  Offer?: Offer[];
  Photo?: Photo[];
  Post?: Post[];
  Reservation?: Reservation[];
  Review?: Review[];
  Session?: Session[];
  TasksAssigned?: Task[];
  TasksCreated?: Task[];
  Tenant?: Tenant | null;
  Agency?: Agency | null;
  OwnedAgencies?: Agency[];
  Permission?: Permission[];
  OwnedProperties?: Property[];
  ListedProperties?: Property[];
  PurchasedProperties?: Property[];
  Facility?: Facility | null;
  facilityId: string | null;
  IncludedService?: IncludedService | null;
  includedServiceId: string | null;
  ExtraCharge?: ExtraCharge | null;
  extraChargeId: string | null;
  Agent?: Agent[];
  Location?: Location | null;
  locationId: string | null;
  Favorite?: Favorite[];
  Report?: Report[];
  TaxRecordsAsClient?: TaxRecord[];
  TaxRecordsCreated?: TaxRecord[];
  TaxRecordsUpdated?: TaxRecord[];
}

export interface Favorite {
  id: string;
  userId: string;
  propertyId: string;
  createdAt: Date;
  updatedAt: Date;
  deletedAt: Date | null;
  user?: User;
  property?: Property;
}

export interface MLConfiguration {
  id: string;
  enableAutoTagging: boolean;
  qualityThreshold: number;
  enableMLFeatures: boolean;
  maxTagsPerImage: number;
  analysisMode: string;
  allowedModels: string[];
  customSettings: JsonValue | null;
  updatedBy: string | null;
  version: number;
  createdAt: Date;
  updatedAt: Date;
}

type JsonValue = string | number | boolean | { [key in string]?: JsonValue } | JsonValue[] | null;
